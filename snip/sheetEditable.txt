
app.post('/sheetEditableT1',function(req,res)
{
    var country_name ='';
    var jsonString = '';
    req.on('data',function(data)
        {
            jsonString += data;
        });
    req.on('end',function(){
        country_name='';
        if(jsonString==''){}
        else{
            var jsonData = JSON.parse('{"' + decodeURI(jsonString).replace(/"/g, '\\"').replace(/&/g, '","').replace(/=/g,'":"') + '"}');
            var country_name = jsonData['country_name'];
        }
        MongoClient.connect("mongodb://localhost:27017/test",function(err,db)
        {
            if(err)
            {
                console.log(err);
                return 0;
            }
            if(req.ip != null)
            {
                var ip = req.ip.toString();
            }
            else
            {
                console.log("Null IP Error.Carry on");
                return;
            }
            console.log("Connection established to the server at mongodb://localhost:27017/test in response to " + ip.toString());
            var subparts = db.collection('subparts');
            if(country_name=='')
                var marks = db.collection('marks_T1');
            else var marks = db.collection('ourMarks_T1');
            var users = db.collection('users');
            
            var query = {};

            subparts.find({"type":"t1"}).toArray(function(err,items){
                var subparts = items[0].subparts;
                var maxMarks = items[0].maxMarks;
                var query_ob = {};
                if(country_name=='')query_ob["ip"] = ip;
                else query_ob["country_name"] = country_name;
                users.find(query_ob).toArray(function(err,data){
                    var country_code = data[0].country_code;
                    //var students = data[0].students;
                    var students = ['Sirius Sharma','Rigel Armstrong','Saiph Ali Khan'];
                    var new_ip = data[0].ip;
                    marks.find({$or:[{"ip":new_ip},{"country_name":country_name}]}).toArray(function(err,items2){
                        if(items2.length>=1)
                        {
                            var leaderMarks = items2[0].leaderMarks;
                        }
                        else
                            var leaderMarks = [];
                        query['subparts'] = subparts;
                        query['leaderMarks'] = leaderMarks;
                        query['maxMarks'] = maxMarks;
                        query['students'] = students;
                        query['country_code'] = country_code;
                        res.json(query);
                        db.close();
                    });
                });
            });
        });
    });
});
